name: Build and Deploy pipeline
on:
  issue_comment:
    types: [created]
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
permissions: 
  pull-requests: write
  contents: write
  packages: write
jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/deploy') || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.base.ref == 'refs/heads/main')
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}
    - name: Checkout PR
      if: contains(github.event.comment.body, '/deploy')
      run: hub pr checkout ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
    - name: Comment on PR
      uses: thollander/actions-comment-pull-request@v2
      if: contains(github.event.comment.body, '/deploy')
      with:
        message: |
          Deploying to production. This usually takes up to 3 minutes
          CodeDeploy status can be found in [status](https://ap-southeast-1.console.aws.amazon.com/codesuite/codedeploy/deployments?region=ap-southeast-1&deployments-meta=eyJmIjp7InRleHQiOiIifSwicyI6e30sIm4iOjUwLCJpIjowfQ) 
        reactions: rocket
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Set filename
      run: |
        echo "FILENAME=infra-aws-demo-$(date +%Y%m%d_%H%M%S).zip" >> $GITHUB_ENV
    - name: Zip file
      run: |
        zip -r ${{ env.FILENAME }} .
    - name: Upload to S3
      run: |
        aws s3 cp $FILENAME s3://gt-code-deploy-bucket/
    - name: AWS Code Deploy
      run: |
        aws deploy register-application-revision --application-name GTApplication \
        --s3-location bucket=gt-code-deploy-bucket,key=${{ env.FILENAME }},bundleType=zip
    
        aws deploy create-deployment --application-name GTApplication \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name production \
            --s3-location bucket=gt-code-deploy-bucket,key=${{ env.FILENAME }},bundleType=zip \
            --ignore-application-stop-failures